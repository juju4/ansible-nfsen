---
## http://holisticinfosec.blogspot.ca/2013/08/toolsmith-c3cm-part-1-nfsight-with.html

- name: set nfsight_htmldir
  set_fact:
#    nfsight_htmldir: "{{ nfsen_htmldir }}/nfsight"
    nfsight_htmldir: "{{ nfsen_htmldir }}/plugins/nfsight"

- name: get nfsight archive
  get_url:
    url: 'http://downloads.sourceforge.net/project/nfsight/nfsight-beta-20140905.tgz'
    dest: "{{nfsen_src_dir}}/nfsight-beta-20140905.tgz"
    mode: 0644
    checksum: 'sha256:6d52e06d516c4c539ac43893ef42500ea1d2153fb1c04bff8f522ab213cef212'

- name: uncompress nfsight
#  unarchive: "src={{nfsen_src_dir}}/nfsight-beta-20140905.tgz dest={{nfsen_src_dir}} creates={{nfsen_src_dir}}/nfsight-beta-20140905/backend/nfsight.pm"
  command: >
      chdir={{nfsen_src_dir}}
      creates={{nfsen_src_dir}}/nfsight-beta-20140905/backend/nfsight.pm
      tar xzf {{nfsen_src_dir}}/nfsight-beta-20140905.tgz

## install mysql w separate role
- name: nfsight | packages dependencies
  package: name={{ item }} state=present
  with_items: "{{ nfsen_nfsight_deps }}"

- block: 
    - name: nfsight | install frontend files
    ## FIXME! 'Remote copy does not support recursive copy of directory' and synchronize not supporting remote_src=yes
    #  copy: "src={{ item }} dest={{ nfsen_htmldir }}/plugins mode=0644 group={{apache_user}} remote_src=yes"
    ## FIXME! fileglob doing only files
    #  with_fileglob:
    #    - "{{nfsen_src_dir}}/nfsight/frontend/*"
    ## FIXME! centos7+precise rsync(3.0.9) has no chown/chmod option (ok trusty/rsync3.1)
      command: "rsync -r --chown=root:{{ apache_user }} --chmod=D0755,F0644 {{ item.s }} {{ nfsen_nfsight_htmldir }} creates={{ item.d }}"
      with_items:
        - { s: "{{nfsen_src_dir}}/nfsight-beta-20140905/frontend/", d: "{{ nfsen_nfsight_htmldir }}/index.php" }
    - name: nfsight | install backend files
    #  copy: "src={{ item }} dest={{ nfsen_vardir }}/plugins mode=0644 owner={{apache_user}} group={{apache_user}} remote_src=yes"
      command: "rsync -r --chown={{ apache_user }}:{{ apache_user }} --chmod=D0755,F0644 {{ item.s }} {{ nfsen_vardir }}/plugins/ creates={{ item.d }}"
    #  with_fileglob:
    #    - "{{nfsen_src_dir}}/nfsight/backend/*"
      with_items:
        - { s: "{{nfsen_src_dir}}/nfsight-beta-20140905/backend/nfsight.pm", d: "{{ nfsen_vardir }}/plugins/nfsight.pm" }
  when: ansible_distribution_release == 'trusty'
- block: 
    - name: nfsight | install frontend files
      command: "rsync -r {{ item.s }} {{ nfsen_nfsight_htmldir }} creates={{ item.d }}"
      with_items:
        - { s: "{{nfsen_src_dir}}/nfsight-beta-20140905/frontend/", d: "{{ nfsen_nfsight_htmldir }}/index.php" }
    - name: nfsight | install backend files
      command: "rsync -r {{ item.s }} {{ nfsen_vardir }}/plugins/ creates={{ item.d }}"
      with_items:
        - { s: "{{nfsen_src_dir}}/nfsight-beta-20140905/backend/nfsight.pm", d: "{{ nfsen_vardir }}/plugins/nfsight.pm" }
    - name: nfsight | validate frontend permissions
      file: "dest={{nfsen_htmldir }}/plugins/nfsight state=directory mode=0755 owner=root group={{ apache_user }} recurse=yes"
    - name: nfsight | validate backend permissions
      file: "dest={{nfsen_vardir}}/plugins/nfsight state=directory mode=0755 owner={{ apache_user }} group={{ apache_user }} recurse=yes"
  when: ansible_distribution_release != 'trusty'

- name: nfsight | check directories exists
  file: dest={{ item }} state=directory mode=0755
  with_items:
    - "{{ nfsen_vardir }}/plugins/nfsight"
    - "{{ nfsen_nfsight_htmldir }}"

- name: nfsight | check permissions are correct
  file: dest={{ item.d }} mode={{ item.m }}
  with_items:
    - { d: "{{ nfsen_nfsight_htmldir }}/bin/biflow2picviz.pl", m: "755" }
    - { d: "{{ nfsen_nfsight_htmldir }}/bin/nfdump2picviz.pl", m: "755" }

- name: nfsight | check permissions are correct (2)
  file: "dest={{ nfsen_nfsight_htmldir }} group={{ apache_user }} recurse=yes"

#- name: nfsight | allow apache user to write to config.php with right permissions - only if doing web install
#  file: "dest={{ nfsen_htmldir }}/nfsight mode=0755 owner={{ apache_user }} group={{ apache_user }} state=directory"
- name: nfsight | install configuration
  template: "src=nfsight-config.php.j2 dest={{ nfsen_nfsight_htmldir }}/config.php mode=0644 group={{ apache_user }} backup=yes"

## with geerlingguy.postgresql role
## FIXME! seems bug with geerlingguy.postgresql but use same module???
- name: create nfsight db
  mysql_db: name=nfsight state=present
- name: create nfsight db user
  mysql_user: name=nfsight password={{ nfsen_nfsight_dbpass }} priv=nfsight.*:CREATE,DELETE,SELECT,INSERT,UPDATE state=present
  when: nfsen_nfsight_dbpass is defined and nfsen_nfsight_dbpass != ''

## TODO: manually create db instead of web install: frontend/sql/create_*.sql
- name: nfsight | create schema.sql
  shell: "cat {{ nfsen_nfsight_htmldir }}/sql/create_table_*.sql | sed 's/CHARSET=latin1$/CHARSET=latin1;/' > {{ nfsen_nfsight_htmldir }}/sql/schema.sql creates={{ nfsen_nfsight_htmldir }}/sql/schema.sql"
- name: nfsight | import schema.sql
#  mysql_db: "state=import name=nfsight target={{ nfsen_nfsight_htmldir }}/sql/schema.sql login_user=nfsight login_password={{ nfsen_nfsight_dbpass }}"
  shell: "mysql nfsight < {{ nfsen_nfsight_htmldir }}/sql/schema.sql"
  ignore_errors: true

## FIXME! user/pass inside cron???
#        user="nfsen" job="/usr/bin/wget --no-check-certificate -q -O - http://management:aggregate@127.0.0.1/nfsen/nfsight/aggregate.php"
- name: nfsight | cron to update db
  cron: name="nfsen-nfsight-udatedb" minute=7
        user="nfsen" job="/usr/bin/wget --no-check-certificate -q -O - http://127.0.0.1/{{ nfsen_nfsight_urlpath }}/aggregate.php"
        cron_file=ansible_nfsen-nfsight-udatedb

## FIXME! not idempotent
- name: nfsight | create users in mysql db
  command: "mysql -NBe \"REPLACE INTO nfsight.user (username, password, level) VALUES ('{{ item.u }}', SHA1('{{ item.p }}'), '0')\""
  with_items: "{{ nfsen_nfsight_users }}"

#- name: nfsight | symlink maxmind
#  file: "src=/var/maxmind/{{ item }} dest={{ nfsen_htmldir }}/plugins/SSHCure/lib/MaxMind/{{ item }} state=link"
#  with_items:
#    - GeoLiteCity.dat
#    - GeoLiteCityv6.dat

#- name: nfsight | review configuration
#  replace: "dest={{ nfsen_htmldir }}/plugins/SSHCure/config/config.php regexp={{ item.re }} replace={{ item.rep }} backup=yes"
#  with_items:
#    - { re: '^\$config\[.nfsen.config-file.\] = .*', rep: "$config['nfsen.config-file'] = '{{ nfsen_confdir }}/nfsen.conf';" }
#    - { re: '^\$config\[.backend.path.\] = .*', rep: "$config['backend.path'] = '{{ nfsen_vardir }}/plugins/SSHCure';" }
#    - { re: '^', rep: '' }

# check /var/www/nfsen/nfsight/config-dist.php

